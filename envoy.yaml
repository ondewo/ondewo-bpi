##################################################################################
# ENVOY ADMIN
##################################################################################
admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 } # ondewo-ingress-envoy-admin

layered_runtime: # Note: workaround for envoy v1.29.2 => https://github.com/triton-inference-server/server/issues/6936
  layers:
    - name: static_layer_sanitize_te
      static_layer:
        envoy.reloadable_features.sanitize_te: false

static_resources:

  ##################################################################################
  # Listeners
  ##################################################################################
  listeners:

    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI WEBGRPC
    # -------------------------------------------------------------------------------
    - name: listener_webgrpc_ondewo_bpi
      address:
        socket_address: { address: 0.0.0.0, port_value: 9080 } # listener_webgrpc_ondewo_bpi
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: cluster_webgrpc_ondewo_bpi
                            auto_host_rewrite: true
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization,cai-token,Access-Control-Allow-Origin
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  # Note: switch this ON for basic auth else leave commented
                  # - name: envoy.filters.http.basic_auth
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.basic_auth.v3.BasicAuth
                  #     # Makefile generates this BasicAuth automatically by the values set in ${MODE}.env file
                  #     # Note: How to do BasicAuth in Envoy
                  #     # 1.) "htpasswd -s -b -c htpasswd.txt admin mypassword"
                  #     #     "htpasswd -s -b -n admin mypassword"
                  #     # 2.) "cat htpasswd.txt" => results in "admin:{SHA}kd/Z3bQZiv/FwZTNjObTOP3kcOI="
                  #     # 3.) "echo -n "admin:mypassword" | openssl base64" => for AIM Access Token Login
                  #     users:
                  #       inline_string:
                  #         ondewo:{SHA}KxZf0Wg2z7vtVspHk0WKm21jCdU= # listener_webgrpc_ondewo_bpi_basic_auth #
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                  #          transport_socket:
                  #            name: envoy.transport_sockets.tls
                  #            typed_config:
                  #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  #              common_tls_context:
                  #                tls_certificates:
                  #                  - certificate_chain:
                  #                      filename: "/etc/certs/server-cert.pem"
                  #                    private_key:
                  #                      filename: "/etc/certs/server-key.pem"
                  #                validation_context:
                  #                  trusted_ca:
                  #                    filename: "/etc/certs/ca-cert.pem"

    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI GRPC
    # -------------------------------------------------------------------------------
    - name: listener_grpc_ondewo_bpi
      address:
        socket_address: { address: 0.0.0.0, port_value: 50080 } # listener_grpc_ondewo_bpi
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                            grpc: { }
                          route:
                            cluster: cluster_grpc_ondewo_bpi
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    # TODO: SSL listener_grpc_ondewo_bpi
    #          transport_socket:
    #            name: envoy.transport_sockets.tls
    #            typed_config:
    #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
    #              common_tls_context:
    #                tls_certificates:
    #                  - certificate_chain:
    #                      filename: "/etc/certs/server-cert.pem"
    #                    private_key:
    #                      filename: "/etc/certs/server-key.pem"
    #                validation_context:
    #                  trusted_ca:
    #                    filename: "/etc/certs/ca-cert.pem"

    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI QA WEBGRPC
    # -------------------------------------------------------------------------------
    - name: listener_webgrpc_ondewo_bpi_qa
      address:
        socket_address: { address: 0.0.0.0, port_value: 9081 } # listener_webgrpc_ondewo_bpi_qa
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: cluster_webgrpc_ondewo_bpi_qa
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization,cai-token,Access-Control-Allow-Origin
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    #          transport_socket:
    #            name: envoy.transport_sockets.tls
    #            typed_config:
    #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
    #              common_tls_context:
    #                tls_certificates:
    #                  - certificate_chain:
    #                      filename: "/etc/certs/server-cert.pem"
    #                    private_key:
    #                      filename: "/etc/certs/server-key.pem"
    #                validation_context:
    #                  trusted_ca:
    #                    filename: "/etc/certs/ca-cert.pem"

    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI QA GRPC
    # -------------------------------------------------------------------------------
    - name: listener_grpc_ondewo_bpi_qa
      address:
        socket_address: { address: 0.0.0.0, port_value: 50081 } # listener_grpc_ondewo_bpi_qa
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                            grpc: { }
                          route:
                            cluster: cluster_grpc_ondewo_bpi_qa
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    # TODO: SSL listener_grpc_ondewo_bpi_qa
    #          transport_socket:
    #            name: envoy.transport_sockets.tls
    #            typed_config:
    #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
    #              common_tls_context:
    #                tls_certificates:
    #                  - certificate_chain:
    #                      filename: "/etc/certs/server-cert.pem"
    #                    private_key:
    #                      filename: "/etc/certs/server-key.pem"
    #                validation_context:
    #                  trusted_ca:
    #                    filename: "/etc/certs/ca-cert.pem"



    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI EXAMPLE WEBGRPC
    # -------------------------------------------------------------------------------
    - name: listener_webgrpc_ondewo_bpi_example
      address:
        socket_address: { address: 0.0.0.0, port_value: 9082 } # listener_webgrpc_ondewo_bpi_example
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: cluster_webgrpc_ondewo_bpi_example
                            auto_host_rewrite: true
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout,authorization,cai-token,Access-Control-Allow-Origin
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  # Note: switch this ON for basic auth else leave commented
                  # - name: envoy.filters.http.basic_auth
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.basic_auth.v3.BasicAuth
                  #     # Makefile generates this BasicAuth automatically by the values set in ${MODE}.env file
                  #     # Note: How to do BasicAuth in Envoy
                  #     # 1.) "htpasswd -s -b -c htpasswd.txt admin mypassword"
                  #     #     "htpasswd -s -b -n admin mypassword"
                  #     # 2.) "cat htpasswd.txt" => results in "admin:{SHA}kd/Z3bQZiv/FwZTNjObTOP3kcOI="
                  #     # 3.) "echo -n "admin:mypassword" | openssl base64" => for AIM Access Token Login
                  #     users:
                  #       inline_string:
                  #         ondewo:{SHA}KxZf0Wg2z7vtVspHk0WKm21jCdU= # listener_webgrpc_ondewo_bpi_example_basic_auth #
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                  #          transport_socket:
                  #            name: envoy.transport_sockets.tls
                  #            typed_config:
                  #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  #              common_tls_context:
                  #                tls_certificates:
                  #                  - certificate_chain:
                  #                      filename: "/etc/certs/server-cert.pem"
                  #                    private_key:
                  #                      filename: "/etc/certs/server-key.pem"
                  #                validation_context:
                  #                  trusted_ca:
                  #                    filename: "/etc/certs/ca-cert.pem"

    # -------------------------------------------------------------------------------
    # Listener: ONDEWO BPI EXAMPLE GRPC
    # -------------------------------------------------------------------------------
    - name: listener_grpc_ondewo_bpi_example
      address:
        socket_address: { address: 0.0.0.0, port_value: 50082 } # listener_grpc_ondewo_bpi_example
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains:
                        - "*"
                      routes:
                        - match:
                            prefix: "/"
                            grpc: { }
                          route:
                            cluster: cluster_grpc_ondewo_bpi_example
                            timeout: 0s
                            max_stream_duration:
                              grpc_timeout_header_max: 0s
                            retry_policy:
                              retry_on: 5xx, reset, connect-failure, unavailable, cancelled, resource-exhausted
                              num_retries: 5
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
    # TODO: SSL listener_grpc_ondewo_bpi_example
    #          transport_socket:
    #            name: envoy.transport_sockets.tls
    #            typed_config:
    #              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
    #              common_tls_context:
    #                tls_certificates:
    #                  - certificate_chain:
    #                      filename: "/etc/certs/server-cert.pem"
    #                    private_key:
    #                      filename: "/etc/certs/server-key.pem"
    #                validation_context:
    #                  trusted_ca:
    #                    filename: "/etc/certs/ca-cert.pem"



  ##################################################################################
  # Clusters
  ##################################################################################
  clusters:

    # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI WEBGRPC
    # -------------------------------------------------------------------------------
    - name: cluster_webgrpc_ondewo_bpi
      connect_timeout: 0.25s
      type: strict_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_webgrpc_ondewo_bpi
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: 0.0.0.0, port_value: 50080 } # cluster_webgrpc_ondewo_bpi

    # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI GRPC
    # -------------------------------------------------------------------------------
    - name: cluster_grpc_ondewo_bpi
      connect_timeout: 0.25s
      type: strict_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_grpc_ondewo_bpi
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: ondewo-bpi, port_value: 50080 } # cluster_grpc_ondewo_bpi
        # TODO(arath): SSL cluster_grpc_ondewo_bpi
        # https://www.ackee.agency/blog/how-to-setup-a-grpc-web-backend-on-google-cloud-run-with-envoy-proxy
        #      dns_lookup_family: V4_ONLY
        #      transport_socket:
        #        name: envoy.transport_sockets.tls
        #        typed_config:
        #          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        #          common_tls_context:
        #            alpn_protocols: h2
        #            validation_context:
        #              trusted_ca:
        #                filename: "/etc/certs/ca-cert.pem"
        #          sni: YOUR_GRPC_APP_URL.a.run.app

        # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI QA WEBGRPC
    # -------------------------------------------------------------------------------
    - name: cluster_webgrpc_ondewo_bpi_qa
      connect_timeout: 0.25s
      type: strict_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_webgrpc_ondewo_bpi_qa
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: 0.0.0.0, port_value: 50081 } # cluster_webgrpc_ondewo_bpi_qa

    # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI QA GRPC
    # -------------------------------------------------------------------------------
    - name: cluster_grpc_ondewo_bpi_qa
      connect_timeout: 0.25s
      type: strict_dns
      dns_lookup_family: V4_ONLY
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_grpc_ondewo_bpi_qa
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: ondewo-bpi_qa, port_value: 50081 } # cluster_grpc_ondewo_bpi_qa
      # TODO: SSL cluster_grpc_ondewo_bpi_qa
      # https://www.ackee.agency/blog/how-to-setup-a-grpc-web-backend-on-google-cloud-run-with-envoy-proxy
      #      dns_lookup_family: V4_ONLY
      #      transport_socket:
      #        name: envoy.transport_sockets.tls
      #        typed_config:
      #          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
      #          common_tls_context:
      #            alpn_protocols: h2
      #            validation_context:
      #              trusted_ca:
      #                filename: "/etc/certs/ca-cert.pem"
      #          sni: YOUR_GRPC_APP_URL.a.run.app

    # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI EXAMPLE WEBGRPC
    # -------------------------------------------------------------------------------
    - name: cluster_webgrpc_ondewo_bpi_example
      connect_timeout: 0.25s
      type: strict_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_webgrpc_ondewo_bpi_example
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: 0.0.0.0, port_value: 50082 } # cluster_webgrpc_ondewo_bpi_example

    # -------------------------------------------------------------------------------
    # Cluster: ONDEWO BPI EXAMPLE GRPC
    # -------------------------------------------------------------------------------
    - name: cluster_grpc_ondewo_bpi_example
      connect_timeout: 0.25s
      type: strict_dns
      # HTTP/2 support
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: { }
      lb_policy: round_robin
      load_assignment:
        cluster_name: cluster_grpc_ondewo_bpi_example
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      { address: ondewo-bpi-example, port_value: 50082 } # cluster_grpc_ondewo_bpi_example
        # TODO(arath): SSL cluster_grpc_ondewo_bpi_example
        # https://www.ackee.agency/blog/how-to-setup-a-grpc-web-backend-on-google-cloud-run-with-envoy-proxy
        #      dns_lookup_family: V4_ONLY
        #      transport_socket:
        #        name: envoy.transport_sockets.tls
        #        typed_config:
        #          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        #          common_tls_context:
        #            alpn_protocols: h2
        #            validation_context:
        #              trusted_ca:
        #                filename: "/etc/certs/ca-cert.pem"
        #          sni: YOUR_GRPC_APP_URL.a.run.app
